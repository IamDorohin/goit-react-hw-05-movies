{"version":3,"file":"static/js/564.c0f811cb.chunk.js","mappings":"mPAGaA,EAAiBC,EAAAA,GAAAA,KAAH,uKASdC,GAAsBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kDAInBG,EAAqBH,EAAAA,GAAAA,GAAH,iJASlBI,GAAqBJ,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,yE,2BCvBlBK,EAAmBL,EAAAA,GAAAA,QAAH,uFAMhBM,EAAiBN,EAAAA,GAAAA,IAAH,+CAGdO,EAAmBP,EAAAA,GAAAA,IAAH,sBAChBQ,EAAiBR,EAAAA,GAAAA,GAAH,gDAGdS,EAAiBT,EAAAA,GAAAA,EAAH,oEAIdU,EAAoBV,EAAAA,GAAAA,EAAH,qEAIjBW,EAAgBX,EAAAA,GAAAA,GAAH,+FAMbY,EAAgBZ,EAAAA,GAAAA,GAAH,sB,SCgB1B,EAlCkB,SAAC,GAA0B,IAAxBa,EAAuB,EAAvBA,iBACXC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAGlE,OAAKA,GAKH,UAACd,EAAD,YACE,SAACC,EAAD,CACEc,IAAG,yCAAoCN,GACvCO,MAAM,MACNC,OAAO,MACPC,IAAKR,KAEP,UAACR,EAAD,YACE,UAACC,EAAD,WACGO,EADH,KACYC,EAAaQ,MAAM,EAAG,GADlC,QAGA,UAACf,EAAD,0BAA6BQ,EAA7B,QACA,uCACA,SAACP,EAAD,UAAoBQ,KACpB,sCACA,SAACP,EAAD,UACGQ,EAAOM,KAAI,SAAAC,GAAK,OACf,SAACd,EAAD,UAA+Bc,EAAMC,MAAjBD,EAAME,GADX,YApBhB,IA2BV,ECAD,EAhCkB,WAAO,IAAD,IACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GAAQ,OAAIN,EAAgBM,EAApB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACZ,IAECG,EAAL,CAEA,IAAMY,EAAI,oBAAGV,EAASW,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAErC,OACE,UAAC/C,EAAD,YACE,SAACE,EAAD,CAAqB8C,GAAIH,EAAzB,kCACA,SAAC,EAAD,CAAW/B,iBAAkBmB,KAC7B,mDACA,UAAC7B,EAAD,YACE,SAACC,EAAD,CAAoB2C,GAAG,OAAvB,mBACA,SAAC3C,EAAD,CAAoB2C,GAAG,UAAvB,yBAGF,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAfmB,CAmB1B,C","sources":["pages/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieInfo/MovieInfo.styled.jsx","components/MovieCard/MovieInfo/MovieInfo.jsx","pages/MovieCard/MovieCard.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.main`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 230px;\n  padding-top: 20px;\n  padding-right: 40px;\n  background-color: white;\n`;\n\nexport const MovieBackToListLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieExtraInfoList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-left: 0;\n  margin-top: 10px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const MovieExtraInfoLink = styled(Link)`\n  :first-child {\n    margin-bottom: 10px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MovieInfoSection = styled.section`\n  display: flex;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoImage = styled.img`\n  margin-right: 50px;\n`;\nexport const MovieDescription = styled.div``;\nexport const MovieInfoTitle = styled.h1`\n  margin-bottom: 20px;\n`;\nexport const MovieInfoVotes = styled.p`\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\nexport const MovieInfoOverview = styled.p`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\nexport const MovieInfoList = styled.ul`\n  margin: 0;\n  margin-top: 20px;\n  padding: 0;\n  list-style: none;\n`;\nexport const MovieInfoItem = styled.li``;\n","import {\n  MovieInfoSection,\n  MovieInfoImage,\n  MovieDescription,\n  MovieInfoTitle,\n  MovieInfoVotes,\n  MovieInfoOverview,\n  MovieInfoList,\n  MovieInfoItem,\n} from 'components/MovieCard/MovieInfo/MovieInfo.styled';\n\nconst MovieInfo = ({ currentMovieInfo }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    currentMovieInfo;\n\n  if (!genres) {\n    return null;\n  }\n\n  return (\n    <MovieInfoSection>\n      <MovieInfoImage\n        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n        wigth=\"350\"\n        height=\"500\"\n        alt={title}\n      />\n      <MovieDescription>\n        <MovieInfoTitle>\n          {title} ({release_date.slice(0, 4)})\n        </MovieInfoTitle>\n        <MovieInfoVotes>User score: {vote_average} </MovieInfoVotes>\n        <h2>Overview:</h2>\n        <MovieInfoOverview>{overview}</MovieInfoOverview>\n        <h3> Genres:</h3>\n        <MovieInfoList>\n          {genres.map(genre => (\n            <MovieInfoItem key={genre.id}>{genre.name}</MovieInfoItem>\n          ))}\n        </MovieInfoList>\n      </MovieDescription>\n    </MovieInfoSection>\n  );\n};\n\nexport default MovieInfo;\n","import {\n  MovieContainer,\n  MovieBackToListLink,\n  MovieExtraInfoList,\n  MovieExtraInfoLink,\n} from './MovieCard.styled';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getCurrentMovie } from '../../services/FetchAPI';\nimport MovieInfo from '../../components/MovieCard/MovieInfo/MovieInfo';\n\nconst MovieCard = () => {\n  const { movieId } = useParams();\n  const [currentMovie, setCurrentMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    getCurrentMovie(movieId)\n      .then(response => setCurrentMovie(response))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!currentMovie) return;\n\n  const data = location.state?.from ?? '/';\n\n  return (\n    <MovieContainer>\n      <MovieBackToListLink to={data}>Back to search list</MovieBackToListLink>\n      <MovieInfo currentMovieInfo={currentMovie} />\n      <p>Additional information</p>\n      <MovieExtraInfoList>\n        <MovieExtraInfoLink to=\"cast\">Cast</MovieExtraInfoLink>\n        <MovieExtraInfoLink to=\"reviews\">Reviews</MovieExtraInfoLink>\n      </MovieExtraInfoList>\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </MovieContainer>\n  );\n};\n\nexport default MovieCard;\n"],"names":["MovieContainer","styled","MovieBackToListLink","Link","MovieExtraInfoList","MovieExtraInfoLink","MovieInfoSection","MovieInfoImage","MovieDescription","MovieInfoTitle","MovieInfoVotes","MovieInfoOverview","MovieInfoList","MovieInfoItem","currentMovieInfo","poster_path","title","release_date","vote_average","overview","genres","src","wigth","height","alt","slice","map","genre","name","id","movieId","useParams","useState","currentMovie","setCurrentMovie","location","useLocation","useEffect","getCurrentMovie","then","response","catch","error","console","log","data","state","from","to","Suspense","fallback"],"sourceRoot":""}