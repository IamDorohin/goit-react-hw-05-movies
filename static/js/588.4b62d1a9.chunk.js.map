{"version":3,"file":"static/js/588.4b62d1a9.chunk.js","mappings":"2MAEaA,E,OAAiBC,GAAAA,KAAH,sB,6CCsB3B,EAxBkB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACXC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAGlE,OAAKA,GAKH,gCACE,gBAAKC,IAAG,yCAAoCN,GAAeO,IAAKN,KAChE,wBAAKA,KACL,uBAAIC,KACJ,uBAAIC,KACJ,uBAAIC,KACJ,wBACGC,EAAOG,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,SAXd,IAiBV,ECcD,EA9BkB,WAAO,IAAD,IACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GAAQ,OAAIN,EAAgBM,EAApB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACZ,IAECG,EAAL,CAEA,IAAMY,EAAI,oBAAGV,EAASW,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAErC,OACE,UAAChC,EAAD,YACE,SAAC,KAAD,CAAMiC,GAAIH,EAAV,kCAEA,SAAC,EAAD,CAAW5B,iBAAkBgB,KAC7B,oDACA,SAAC,KAAD,CAAMe,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAbmB,CAiB1B,C","sources":["pages/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieInfo/MovieInfo.jsx","pages/MovieCard/MovieCard.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieContainer = styled.main``;\n","const MovieInfo = ({ currentMovieInfo }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    currentMovieInfo;\n\n  if (!genres) {\n    return null;\n  }\n\n  return (\n    <section>\n      <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} />\n      <h1>{title}</h1>\n      <p>{release_date}</p>\n      <p>{vote_average}</p>\n      <p>{overview}</p>\n      <ul>\n        {genres.map(genre => (\n          <li key={genre.id}>{genre.name}</li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default MovieInfo;\n","import { MovieContainer } from './MovieCard.styled';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getCurrentMovie } from '../../services/FetchAPI';\nimport MovieInfo from '../../components/MovieCard/MovieInfo/MovieInfo';\n\nconst MovieCard = () => {\n  const { movieId } = useParams();\n  const [currentMovie, setCurrentMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    getCurrentMovie(movieId)\n      .then(response => setCurrentMovie(response))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!currentMovie) return;\n\n  const data = location.state?.from ?? '/';\n\n  return (\n    <MovieContainer>\n      <Link to={data}>Back to search list</Link>\n\n      <MovieInfo currentMovieInfo={currentMovie} />\n      <h2>Additional information</h2>\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </MovieContainer>\n  );\n};\n\nexport default MovieCard;\n"],"names":["MovieContainer","styled","currentMovieInfo","poster_path","title","release_date","vote_average","overview","genres","src","alt","map","genre","name","id","movieId","useParams","useState","currentMovie","setCurrentMovie","location","useLocation","useEffect","getCurrentMovie","then","response","catch","error","console","log","data","state","from","to","Suspense","fallback"],"sourceRoot":""}