{"version":3,"file":"static/js/211.86f7aff2.chunk.js","mappings":"iPAEaA,EAAkBC,EAAAA,GAAAA,IAAH,6FAMfC,EAAaD,EAAAA,GAAAA,KAAH,0HAOVE,EAAcF,EAAAA,GAAAA,MAAH,oIAQXG,EAAeH,EAAAA,GAAAA,OAAH,6H,SCqBzB,EApCkB,SAAC,GAAqC,IAAnCI,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtC,GAAsCC,EAAAA,EAAAA,UAAQ,OAACH,QAAD,IAACA,EAAAA,EAAW,IAA1D,eAAOI,EAAP,KAAoBC,EAApB,KAkBA,OACE,SAACV,EAAD,WACE,UAACE,EAAD,CAAYI,SAbK,SAAAK,GACnBA,EAAMC,iBAEqB,KAAvBH,EAAYI,OAKhBP,EAASG,GAJPK,MAAM,4BAKT,EAIG,WACE,SAACX,EAAD,CACEY,KAAK,OACLC,MAAOP,EACPF,SAtBwB,SAAAI,GAC9BD,EAAeC,EAAMM,cAAcD,MAAME,eACzCX,EAASI,EAAMM,cAAcD,MAAME,cACpC,EAoBOC,aAAa,MACbC,WAAS,EACTC,YAAY,iCAEd,SAACjB,EAAD,CAAcW,KAAK,SAAnB,wBAIP,E,SCvCYO,EAAuBrB,EAAAA,GAAAA,IAAH,gJAQpBsB,EAAkBtB,EAAAA,GAAAA,GAAH,gLAQfuB,EAAkBvB,EAAAA,GAAAA,GAAH,sBACfwB,GAAkBxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAH,kDAIf0B,EAAkB1B,EAAAA,GAAAA,IAAH,6VAkBf2B,EAAyB3B,EAAAA,GAAAA,EAAH,ma,SCNnC,EA1BmB,SAAC,GAAqB,IAAnB4B,EAAkB,EAAlBA,YACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,WACE,SAACC,EAAD,UACGM,EAAYG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACf,SAACX,EAAD,WACE,SAACC,EAAD,CAAiBW,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMR,GAA7C,UACE,UAACH,EAAD,YACE,gBACEY,IAAG,yCAAoCJ,GACvCK,MAAM,MACNC,OAAO,MACPC,IAAKR,KAEP,UAACN,EAAD,eAA0BM,WATVD,EADP,OAkBxB,EChCYU,EAAqB1C,EAAAA,GAAAA,KAAH,sB,SC+C/B,EA1Ce,WAAO,IAAD,EACnB,GAAsCO,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8CF,EAAAA,EAAAA,WAC5C,kCAAMoC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,4BAA7C,QAAqE,EAArE,IADF,eAAOC,EAAP,KAAwBC,EAAxB,KAGA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAgB,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAEvDC,EAAAA,EAAAA,YAAU,WACRV,OAAOC,aAAaU,QAClB,mBACAb,KAAKc,UAAUT,GAElB,GAAE,CAACA,KAEJO,EAAAA,EAAAA,YAAU,WACY,KAAhB/C,GACJkD,EAAAA,GAAuBlD,GACpBmD,MAAK,SAAAC,GAAI,OAAIX,EAAmBW,EAAKC,QAA5B,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACvD,IAUJ,OACE,UAACkC,EAAD,YACE,SAAC,EAAD,CACEtC,QAASiD,EACThD,SAR0B,SAAA6D,GAC9BzD,EAAeyD,EAChB,EAOK5D,SAbe,SAAA4D,GACnBd,EAA0B,KAAVc,EAAe,CAAEC,OAAQD,GAAU,CAAC,EACrD,KAaG,SAAC,EAAD,CAAYtC,YAAaoB,MAG9B,C","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/SearchList/SearchList.styled.jsx","components/SearchList/SearchList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchContainer = styled.div`\n  padding-left: 230px;\n  background-color: white;\n  height: 70px;\n`;\n\nexport const SearchForm = styled.form`\n  padding-top: 12px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #000;\n  width: 258px;\n`;\n\nexport const SearchInput = styled.input`\n  height: 20px;\n  margin-right: 10px;\n  border-radius: 3px;\n  background-color: white;\n  color: black;\n`;\n\nexport const SearchButton = styled.button`\n  width: 70px;\n  height: 25px;\n  border-radius: 3px;\n  background-color: white;\n  color: black;\n`;\n","import { useState } from 'react';\nimport {\n  SearchContainer,\n  SearchForm,\n  SearchInput,\n  SearchButton,\n} from 'components/SearchBar/SearchBar.styled';\n\nconst SearchBar = ({ element, onSubmit, onChange }) => {\n  const [searchQuery, setSearchQuery] = useState(element ?? '');\n\n  const handleSearchQueryChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n    onChange(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      alert('Enter your search request');\n      return;\n    }\n\n    onSubmit(searchQuery);\n  };\n\n  return (\n    <SearchContainer>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          value={searchQuery}\n          onChange={handleSearchQueryChange}\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search your favourite films\"\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n    </SearchContainer>\n  );\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const SearchFilmsContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 40px;\n  padding-right: 40px;\n  background-color: white;\n`;\n\nexport const SearchFilmsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: calc(-1 * 16px);\n  margin-left: calc(-1 * 16px);\n`;\nexport const SearchFilmsItem = styled.li``;\nexport const SearchFilmsLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const SearchFilmsCard = styled.div`\n  margin-top: 32px;\n  margin-left: 16px;\n  flex-basis: calc(100% / 5 - 16px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n\n  &:hover,\n  &:focus {\n    transition-property: transform;\n    transform: scale(1.1);\n    transition-duration: 500ms;\n  }\n`;\n\nexport const SearchFilmsDescription = styled.p`\n  width: 298px;\n  height: 50px;\n  margin-top: 0;\n  border-top: 1px solid white;\n  border-right: 1px solid white;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-bottom: 1px solid white;\n  border-left: 1px solid white;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: black;\n  color: white;\n`;\n","import {\n  SearchFilmsContainer,\n  SearchFilmsList,\n  SearchFilmsItem,\n  SearchFilmsLink,\n  SearchFilmsCard,\n  SearchFilmsDescription,\n} from 'components/SearchList/SearchList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst SearchList = ({ moviesArray }) => {\n  const location = useLocation();\n\n  return (\n    <SearchFilmsContainer>\n      <SearchFilmsList>\n        {moviesArray.map(({ id, title, poster_path }) => (\n          <SearchFilmsItem key={id}>\n            <SearchFilmsLink to={`${id}`} state={{ from: location }}>\n              <SearchFilmsCard>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  width=\"300\"\n                  height=\"470\"\n                  alt={title}\n                />\n                <SearchFilmsDescription> {title}</SearchFilmsDescription>\n              </SearchFilmsCard>\n            </SearchFilmsLink>\n          </SearchFilmsItem>\n        ))}\n      </SearchFilmsList>\n    </SearchFilmsContainer>\n  );\n};\n\nexport default SearchList;\n","import styled from 'styled-components';\n\nexport const MoviesPageContaier = styled.main``;\n","import { useState, useEffect } from 'react';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport SearchList from 'components/SearchList/SearchList';\nimport { MoviesPageContaier } from './Movies.styled';\nimport * as API from '../../services/FetchAPI';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchingMovies, setSearchingMovies] = useState(\n    () => JSON.parse(window.localStorage.getItem('localStorageData')) ?? []\n  );\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQueryState = searchParams.get('search') ?? '';\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      'localStorageData',\n      JSON.stringify(searchingMovies)\n    );\n  }, [searchingMovies]);\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n    API.getSearchingMovies(searchQuery)\n      .then(data => setSearchingMovies(data.results))\n      .catch(error => console.log(error));\n  }, [searchQuery]);\n\n  const changeSearch = query => {\n    setSearchParams(query !== '' ? { search: query } : {});\n  };\n\n  const handleSearchQueryChange = query => {\n    setSearchQuery(query);\n  };\n\n  return (\n    <MoviesPageContaier>\n      <SearchBar\n        element={searchQueryState}\n        onSubmit={handleSearchQueryChange}\n        onChange={changeSearch}\n      />\n      <SearchList moviesArray={searchingMovies} />\n    </MoviesPageContaier>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchContainer","styled","SearchForm","SearchInput","SearchButton","element","onSubmit","onChange","useState","searchQuery","setSearchQuery","event","preventDefault","trim","alert","type","value","currentTarget","toLowerCase","autocomplete","autoFocus","placeholder","SearchFilmsContainer","SearchFilmsList","SearchFilmsItem","SearchFilmsLink","Link","SearchFilmsCard","SearchFilmsDescription","moviesArray","location","useLocation","map","id","title","poster_path","to","state","from","src","width","height","alt","MoviesPageContaier","JSON","parse","window","localStorage","getItem","searchingMovies","setSearchingMovies","useSearchParams","searchParams","setSearchParams","searchQueryState","get","useEffect","setItem","stringify","API","then","data","results","catch","error","console","log","query","search"],"sourceRoot":""}