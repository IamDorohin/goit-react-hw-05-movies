{"version":3,"file":"static/js/419.e448c77d.chunk.js","mappings":"8LAgCA,UA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,SAAAC,GAAQ,OAAIJ,EAAWI,EAASC,QAAxB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACX,IAECG,GAKH,8BACE,wBACGA,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADE,QANV,IAeV,C","sources":["components/MovieCard/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../../services/FetchAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(response => setReviews(response.results))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <section>\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","response","results","catch","error","console","log","map","id","author","content"],"sourceRoot":""}